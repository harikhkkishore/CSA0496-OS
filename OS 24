#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
int main() {
    int fileDescriptor = creat("example.txt", 0644);
    if (fileDescriptor == -1) {
        perror("Error creating file");
        exit(EXIT_FAILURE);
    }
    printf("File created successfully.\n");
   const char *data = "Hello, this is a demonstration of UNIX system calls for file management.";
    ssize_t bytesWritten = write(fileDescriptor, data, strlen(data));
    if (bytesWritten == -1) {
        perror("Error writing to file");
        close(fileDescriptor);
        exit(EXIT_FAILURE);
    }

    printf("Data written to the file successfully.\n");
    close(fileDescriptor);
    fileDescriptor = open("example.txt", O_RDONLY);
    if (fileDescriptor == -1) {
        perror("Error opening file for reading");
        exit(EXIT_FAILURE);
    }
    char buffer[100];
    ssize_t bytesRead = read(fileDescriptor, buffer, sizeof(buffer));

    if (bytesRead == -1) {
        perror("Error reading from file");
        close(fileDescriptor);
        exit(EXIT_FAILURE);
    }

    printf("Data read from the file:\n%s\n", buffer);
    close(fileDescriptor);
    if (unlink("example.txt") == -1) {
        perror("Error deleting file");
        exit(EXIT_FAILURE);
    }

    printf("File deleted successfully.\n");

    return 0;
}
